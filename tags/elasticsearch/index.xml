<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>elasticsearch on Jorge Luis Betancourt</title><link>https://jorgelbg.me/tags/elasticsearch/</link><description>Recent content in elasticsearch on Jorge Luis Betancourt</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Jan 2020 11:46:14 -0500</lastBuildDate><atom:link href="https://jorgelbg.me/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml"/><item><title>Better URL search with Elasticsearch</title><link>https://jorgelbg.me/2020/01/better-url-search-with-elasticsearch/</link><pubDate>Wed, 01 Jan 2020 11:46:14 -0500</pubDate><guid>https://jorgelbg.me/2020/01/better-url-search-with-elasticsearch/</guid><description>üöÄ This article was posted in the trivago tech blog.
At trivago, we generate a huge amount of logs and we have our own custom setup for shipping logs using mostly Protocol Buffers. Eventually we end up with some fields in ES that contain partial (or full) URLs. For instance in our specific case we store the query component of the URL in a field called query and the path component in a field named url_path.</description></item><item><title>Useful alerts with Elastic Watcher &amp; Machine Learning</title><link>https://jorgelbg.me/2019/03/useful-alerts-with-elastic-watcher-machine-learning/</link><pubDate>Fri, 15 Mar 2019 13:00:00 +0100</pubDate><guid>https://jorgelbg.me/2019/03/useful-alerts-with-elastic-watcher-machine-learning/</guid><description>Alerts should be meaningful, simply getting a notification about something happening is not enough. A good alert should be actionable and investigable. For me, this means getting a answer to the following questions:
What happened? Was the traffic to the Web site unusually low? Did the number of errors increase? This is the type of information that the alert should contain in a clear and visible way.
Why an alert triggered?</description></item><item><title>Optimize Grafana dashboards with Elasticsearch index aliases</title><link>https://jorgelbg.me/2018/12/optimize-grafana-dashboards-with-elasticsearch-index-aliases/</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0100</pubDate><guid>https://jorgelbg.me/2018/12/optimize-grafana-dashboards-with-elasticsearch-index-aliases/</guid><description>Grafana is a very popular opensource dashboarding solution. Provides support for a long list of storage solutions, including Elasticsearch. Unfortunately, the ES support is not at the same level as the one you get for InfluxDB, for instance. Still, Grafana allows combining in the same dashboard different data sources. It is possible to have a panel fetching data from ES and a different panel fetching data from InfluxDB.
Grafana ‚ù§Ô∏è Elasticsearch Grafana provides stellar support for InfluxDB &amp;amp; Prometheus, among others.</description></item></channel></rss>